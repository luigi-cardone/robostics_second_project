DWAPlannerROS:

# Robot Configuration Parameters - Four-Wheel Independent Movement System
  max_vel_x: 3.0  # TO DO: Specify the maximum x velocity for your robot
  min_vel_x: -3.0  # TO DO: Specify the minimum x velocity for your robot

  max_vel_y: 3.0  # TO DO: Specify the maximum y velocity for your robot
  min_vel_y: -3.0  # TO DO: Specify the minimum y velocity for your robot

  max_trans_vel: 0.4  # Choose slightly less than the base's capability
  min_trans_vel: 0.1  # This is the min trans velocity when there is negligible rotational velocity
  trans_stopped_vel: 0.1

  # Warning!
  #   Do not set min_trans_vel to 0.0 otherwise DWA will always think translational velocities
  #   are non-negligible and small in place rotational velocities will be created.

  max_rot_vel: 3.0  # Choose slightly less than the base's capability
  min_rot_vel: 0.4  # This is the min angular velocity when there is negligible translational velocity
  rot_stopped_vel: 0.4
  
  acc_lim_x: 0.5  # Maximum is theoretically higher, but we don't want to crash/do strange stuff/overshoot
  acc_lim_theta: 1.0  # rad
  acc_lim_y: 0.5  # TO DO: Specify the appropriate acceleration limit for the y-axis

# Goal Tolerance Parameters
  yaw_goal_tolerance: 0.3  # 0.05
  xy_goal_tolerance: 0.2  # 0.10

# Forward Simulation Parameters
  sim_time: 2.0  # 1.7 The amount of time to forward-simulate trajectories in seconds
  vx_samples: 3  # 3 The number of samples to use when exploring the x velocity space
  vy_samples: 3  # TO DO: Specify the number of samples for y velocity space
  vtheta_samples: 20  # 20

# Trajectory Scoring Parameters
  # cost = path_distance_bias * (distance to path from the endpoint of the trajectory in meters) + goal_distance_bias * (distance to local goal from the endpoint of the trajectory in meters) + occdist_scale * (maximum obstacle cost along the trajectory in obstacle cost (0-254))
  path_distance_bias: 32.0  # 32.0 - weighting for how much it should stick to the global path plan
  goal_distance_bias: 24.0  # 24.0 - weighting for how much it should attempt to reach its goal
  occdist_scale: 0.01  # 0.01 - weighting for how much the controller should avoid obstacles
  forward_point_distance: 0.25  # 0.325 - how far along to place an additional scoring point
  stop_time_buffer: 0.2  # 0.2 - amount of time a robot must stop in before colliding for a valid trajectory
  scaling_speed: 0.25  # 0.25 - absolute velocity at which to start scaling the robot's footprint
  max_scaling_factor: 0.2  # 0.2 - how much to scale the robot's footprint when at speed
  
# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.15  # 0.05 - how far to travel before resetting oscillation flags

# Debugging
  publish_traj_pc: true
  publish_cost_grid_pc: true
  publish_cost_grid: true
  global_frame_id: odom